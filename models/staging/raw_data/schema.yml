version: 2

models:
  - name: stg_raw_data__categories
    description: "This model contains the product categories listed in the shop."
    columns:
      - name: category_id
        description: "Primary key, unique identifier for each category."
        tests:
            - unique
            - not_null
      - name: category_name
        description: "The name of the category."

  - name: stg_raw_data__brands
    description: "This model contains the brands listed in the shop."
    columns:
      - name: brand_id
        description: "Primary key, unique identifier for each brand."
        tests:
            - unique
            - not_null
      - name: brand_name
        description: "The name of the brand."

  - name: stg_raw_data__customers
    description: "This model contains customer related information, phone , mail and where they live."
    columns:
      - name: customer_id
        description: "Primary key, unique identifier for each customer."
        tests:
            - unique
            - not_null
      - name: customer_first_name
        description: "The first name of the customer."
      - name: customer_last_name
        description: "The last name of the customer."
      - name: customer_name
        description: "Concatenation of first and last name to have customer full name."
      - name: customer_email
        description: "The email of the customer."
      - name: customer_phone
        description: "The phone number of the customer."
      - name: customer_street
        description: "The street of the customer."
      - name: customer_city
        description: "The city of the customer."
      - name: customer_zip_code
        description: "The zip code of the city where the customer lives."
      - name: customer_state
        description: "The state of the customer."

  - name: stg_raw_data__order_items
    description: "This model contains information about each item included order, price, quantity, and prduct and discount."
    columns:
      - name: order_item_id
        description: "Primary key, unique identifier for each order_item created by concatenating order_id and item_id. The order_id is in first position so this columns allows to group order_item by order and number of the item all at once by sorting on this column."
        tests:
            - unique
            - not_null
      - name: item_id
        description: "The id of the item within the order."
        tests: 
            - not_null
      - name: order_id
        description: "Foreign key linking the order item to the corresponding order."
        tests:
          - not_null
          - relationships:
              name: order_id_foreign_key_in_stg_raw_data__order_items
              to: ref('stg_raw_data__orders')
              field: order_id
      - name: product_id
        description: "Foreign key linking the order item to the corresponding product."
        tests:
          - not_null
          - relationships:
              name: product_id_foreign_key_in_stg_raw_data__order_items
              to: ref('stg_raw_data__products')
              field: product_id
      - name: unit_price
        description: "The price of item per unit."
      - name: discount_percentage
        description: "The discount percentage applied to the item."
      - name: discount_amount_per_unit
        description: "The amount of the discount per unit computed by multiplying the unit_price by discount percentage."
      - name: unit_quantity
        description: "The quantity of items ordered."   
      - name: total_order_item_amount
        description: "Total amount of this order item , computed as (quantity  * (unit_price * (1-discount)))"
        
  - name: stg_raw_data__orders
    description: "This model contains order related information such as ordered date, store, staff, customer and shipped date."
    columns:
      - name: order_id
        description: "Primary key, unique identifier for each order."
        tests:
            - unique
            - not_null
      - name: customer_id
        description: "Foreign key linking the order to the corresponding customer."
        tests:
            - not_null
            - relationships:
                name: customer_id_foreign_key_in_stg_raw_data__orders
                to: ref('stg_raw_data__customers')
                field: customer_id
      - name: staff_id
        description: "Foreign key linking the order to the corresponding staff member."
        tests:
            - not_null
            - relationships:
                name: staff_id_foreign_key_in_stg_raw_data__orders
                to: ref('stg_raw_data__staffs')
                field: staff_id
      - name: store_id
        description: "Foreign key linking the order to the corresponding store."
        tests:
            - not_null
            - relationships:
                name: store_id_foreign_key_in_stg_raw_data__orders
                to: ref('stg_raw_data__stores')
                field: store_id
      - name: order_date
        description: "The date at which the order ahs been registered."
        tests: 
          - not_null
      - name: order_status
        description: " The status of the order, from 1 to 4, 4 corresponding to 'shipped'. Transformed it from integer to string so we can group by status. "
        tests:
          - not_null
          - accepted_values:
              name: accepted_values_order_status
              values: ['1','2','3','4']
      - name: required_date
        description: " The date at which the order should have been shipped: as long as the order has not been shipped, it is equal to order_date. Allows to considered if the delivery is done without delay."
      - name: shipped_date
        description : " The date at which the product as been shipped. It is null as long as the product hasn't been shipped."
      - name: shipping_delay_in_days
        description: "Irrelevant as long as the product has not been shipped. Compute the number of days between requirement_date and shipping date. A positive delay means the order has been shipped too late."
    
  - name: stg_raw_data__products
    description: "This model contains product related information such as brand, category, price, model_year and name."
    columns:
      - name: product_id
        description: "Primary key, unique identifier for each product."
        tests:
            - unique
            - not_null
      - name: brand_id
        description: "Foreign key linking the product to the corresponding brand."
        tests:
            - not_null
            - relationships:
                name:  brand_id_foreign_key_in_stg_raw_data__products
                to: ref('stg_raw_data__brands')
                field: brand_id
      - name: category_id
        description: "Foreign key linking the product to the corresponding category."
        tests:
            - not_null
            - relationships:
                name:  category_id_foreign_key_in_stg_raw_data__products
                to: ref('stg_raw_data__categories')
                field: category_id
      - name: unit_price
        description: "Unit price of a product."
      - name: product_model_year
        description: "The year at which the model has been released, convert into string."

  - name: stg_raw_data__staffs
    description: "This model contains staff related information such as brand, name, store, manager."
    columns:
      - name: staff_id
        description: "Primary key, unique identifier for each staff member."
        tests:
            - unique
            - not_null
      - name: staff_first_name
      - name: staff_last_name
      - name: staff_name
        description: "Concatenation of first and last name to have the staff member full name."
      - name: staff_store_id 
        description: "Foreign key linking the staff member to the corresponding store."
        tests:
            - not_null
            - relationships:
                name:  store_id_foreign_key_in_stg_raw_data__staffs
                to: ref('stg_raw_data__stores')
                field: store_id
      - name: manager_id 
        description: "Foreign key linking the staff member to its manager."
        tests:
            - not_null
            - relationships:
                name:  manager_id_foreign_key_in_stg_raw_data__staffs
                to: ref('stg_raw_data__staffs')
                field: manager_id
      - name: manager_name
        description: "Concatenation of managers first and last name to have the manager full name."
      - name: is_active
        description: "Boolean inidcating if the staff member is active or not : 1 means yes and 0 no, kept them so because eay and light to use."
      - name: staff_email
      - name: staff_phone

  - name: stg_raw_data__stores
    description: "This model contains stores related information such as brand, name, store, manager."
    columns:
      - name: store_id
        description: "Primary key, unique identifier for each store."
        tests:
            - unique
            - not_null
      - name: store_name
        description: "Name of the store"
      - name: store_street
        description: "Street and street number of the store"
      - name: store_city
        description: "City of the store"
      - name: store_zip_code
        description: "Zip code of the store"
      - name: store_state
      - name: store_email
      - name: store_phone
  
  - name: stg_raw_data__stocks
    description: "This model contains information about stocks of product in each store."
    columns:
      - name: product_store_stock_id
        description: "Primary key, unique identifier for stock of each product in each store."
        tests:
            - unique
            - not_null
      - name: product_id
        description: "The product to which the stock line is related."
        tests:
          - relationships:
                name:  product_id_foreign_key_in_stg_raw_data__stocks
                to: ref('stg_raw_data__products')
                field: product_id
      - name: store_id
        description: "The store to which the stock line is related."
        tests:
          - relationships:
                name:  store_id_foreign_key_in_stg_raw_data__stocks
                to: ref('stg_raw_data__stores')
                field: store_id
      - name: stock_quantity
        description: "Quantity of product in the store."


      




